# kinds                                                               -*- sh -*-
#
# For documentation on this file format, please refer to
# src/theory/builtin/kinds.
#

[theory]
id                 = "THEORY_FP"
base_class         = "::cvc5::internal::theory::fp::TheoryFp"
base_class_header  = "theory/fp/theory_fp.h"
properties         = ["check"]
typechecker_header = "theory/fp/theory_fp_type_rules.h"

[rewriter]
class  = "::cvc5::internal::theory::fp::TheoryFpRewriter"
header = "theory/fp/theory_fp_rewriter.h"

# Theory content goes here.

# constants...
[[constants]]
name    = "CONST_FLOATINGPOINT"
F       = "class"
T       = "FloatingPoint"
hasher  = "::cvc5::internal::FloatingPointHashFunction"
header  = "util/floatingpoint.h"
comment = "a floating-point literal"

[[typerules]]
name               = "CONST_FLOATINGPOINT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointConstantTypeRule"

[[constants]]
name    = "CONST_ROUNDINGMODE"
F       = "enum class"
T       = "RoundingMode"
hasher  = "::cvc5::internal::RoundingModeHashFunction"
header  = "util/roundingmode.h"
comment = "a floating-point rounding mode"

[[typerules]]
name               = "CONST_ROUNDINGMODE"
type_checker_class = "::cvc5::internal::theory::fp::RoundingModeConstantTypeRule"

# types...

[[sorts]]
name                     = "ROUNDINGMODE_TYPE"
cardinality              = 5
well_founded             = true
wellfoundedness-computer = "NodeManager::currentNM()->mkConst<RoundingMode>(RoundingMode())"
ground-term-computer     = "expr/node_manager.h"
comment                  = "floating-point rounding mode"

[[enumerators]]
name   = "ROUNDINGMODE_TYPE"
class  = "::cvc5::internal::theory::fp::RoundingModeEnumerator"
header = "theory/fp/type_enumerator.h"

[[constants]]
name    = "FLOATINGPOINT_TYPE"
F       = "class"
T       = "FloatingPointSize"
hasher  = "::cvc5::internal::FloatingPointSizeHashFunction"
header  = "util/floatingpoint.h"
comment = "floating-point type"

[[cardinalities]]
name     = "FLOATINGPOINT_TYPE"
computer = "::cvc5::internal::theory::fp::CardinalityComputer::computeCardinality(%TYPE%)"
header   = "theory/fp/theory_fp_type_rules.h"

[[enumerators]]
name   = "FLOATINGPOINT_TYPE"
class  = "::cvc5::internal::theory::fp::FloatingPointEnumerator"
header = "theory/fp/type_enumerator.h"

[[well-founded]]
name                     = "FLOATINGPOINT_TYPE"
wellfoundedness-computer = true
ground-term-computer     = "(*cvc5::internal::theory::TypeEnumerator(%TYPE%))"
header                   = "theory/type_enumerator.h"

# operators...
[[operators]]
name     = "FLOATINGPOINT_FP"
children = 3
comment  = "construct a floating-point literal from bit vectors"
[[typerules]]
name               = "FLOATINGPOINT_FP"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointFPTypeRule"

[[operators]]
name     = "FLOATINGPOINT_EQ"
children = "2:"
comment  = "floating-point equality"
[[typerules]]
name               = "FLOATINGPOINT_EQ"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_ABS"
children = 1
comment  = "floating-point absolute value"
[[typerules]]
name               = "FLOATINGPOINT_ABS"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_NEG"
children = 1
comment  = "floating-point negation"

[[typerules]]
name               = "FLOATINGPOINT_NEG"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_ADD"
children = 3
comment  = "floating-point addition"
[[typerules]]
name               = "FLOATINGPOINT_ADD"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_SUB"
children = 3
comment  = "floating-point sutraction"

[[typerules]]
name               = "FLOATINGPOINT_SUB"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_MULT"
children = 3
comment  = "floating-point multiply"

[[typerules]]
name               = "FLOATINGPOINT_MULT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_DIV"
children = 3
comment  = "floating-point division"

[[typerules]]
name               = "FLOATINGPOINT_DIV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_FMA"
children = 4
comment  = "floating-point fused multiply and add"

[[typerules]]
name               = "FLOATINGPOINT_FMA"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_SQRT"
children = 2
comment  = "floating-point square root"

[[typerules]]
name               = "FLOATINGPOINT_SQRT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_REM"
children = 2
comment  = "floating-point remainder"

[[typerules]]
name               = "FLOATINGPOINT_REM"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_RTI"
children = 2
comment  = "floating-point round to integral"

[[typerules]]
name               = "FLOATINGPOINT_RTI"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointRoundingOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_MIN"
children = 2
comment  = "floating-point minimum"

[[typerules]]
name               = "FLOATINGPOINT_MIN"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_MAX"
children = 2
comment  = "floating-point maximum"

[[typerules]]
name               = "FLOATINGPOINT_MAX"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_MIN_TOTAL"
children = 3
comment  = "floating-point minimum (defined for all inputs)"

[[typerules]]
name               = "FLOATINGPOINT_MIN_TOTAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointPartialOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_MAX_TOTAL"
children = 3
comment  = "floating-point maximum (defined for all inputs)"

[[typerules]]
name               = "FLOATINGPOINT_MAX_TOTAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointPartialOperationTypeRule"

[[operators]]
name     = "FLOATINGPOINT_LEQ"
children = "2:"
comment  = "floating-point less than or equal"

[[typerules]]
name               = "FLOATINGPOINT_LEQ"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_LT"
children = "2:"
comment  = "floating-point less than"

[[typerules]]
name               = "FLOATINGPOINT_LT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_GEQ"
children = "2:"
comment  = "floating-point greater than or equal"

[[typerules]]
name               = "FLOATINGPOINT_GEQ"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_GT"
children = "2:"
comment  = "floating-point greater than"

[[typerules]]
name               = "FLOATINGPOINT_GT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_NORMAL"
children = 1
comment  = "floating-point is normal"

[[typerules]]
name               = "FLOATINGPOINT_IS_NORMAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_SUBNORMAL"
children = 1
comment  = "floating-point is sub-normal"

[[typerules]]
name               = "FLOATINGPOINT_IS_SUBNORMAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_ZERO"
children = 1
comment  = "floating-point is zero"

[[typerules]]
name               = "FLOATINGPOINT_IS_ZERO"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_INF"
children = 1
comment  = "floating-point is infinite"

[[typerules]]
name               = "FLOATINGPOINT_IS_INF"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_NAN"
children = 1
comment  = "floating-point is NaN"

[[typerules]]
name               = "FLOATINGPOINT_IS_NAN"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_NEG"
children = 1
comment  = "floating-point is negative"

[[typerules]]
name               = "FLOATINGPOINT_IS_NEG"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[operators]]
name     = "FLOATINGPOINT_IS_POS"
children = 1
comment  = "floating-point is positive"

[[typerules]]
name               = "FLOATINGPOINT_IS_POS"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointTestTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_FP_FROM_IEEE_BV_OP"
F       = "class"
T       = "FloatingPointToFPIEEEBitVector"
hasher  = "::cvc5::internal::FloatingPointConvertSortHashFunction<0x1>"
header  = "util/floatingpoint.h"
comment = "operator for to_fp from bit vector"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_IEEE_BV_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_FP_FROM_IEEE_BV"
K2       = "FLOATINGPOINT_TO_FP_FROM_IEEE_BV_OP"
children = 1
comment  = "convert an IEEE-754 bit vector to floating-point"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_IEEE_BV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToFPIEEEBitVectorTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_FP_FROM_FP_OP"
F       = "class"
T       = "FloatingPointToFPFloatingPoint"
hasher  = "::cvc5::internal::FloatingPointConvertSortHashFunction<0x2>"
header  = "util/floatingpoint.h"
comment = "operator for to_fp from floating point"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_FP_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_FP_FROM_FP"
K2       = "FLOATINGPOINT_TO_FP_FROM_FP_OP"
children = 2
comment  = "convert between floating-point sorts"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_FP"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToFPFloatingPointTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_FP_FROM_REAL_OP"
F       = "class"
T       = "FloatingPointToFPReal"
hasher  = "::cvc5::internal::FloatingPointConvertSortHashFunction<0x4>"
header  = "util/floatingpoint.h"
comment = "operator for to_fp from real"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_REAL_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_FP_FROM_REAL"
K2       = "FLOATINGPOINT_TO_FP_FROM_REAL_OP"
children = 2
comment  = "convert a real to floating-point"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_REAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToFPRealTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_FP_FROM_SBV_OP"
F       = "class"
T       = "FloatingPointToFPSignedBitVector"
hasher  = "::cvc5::internal::FloatingPointConvertSortHashFunction<0x8>"
header  = "util/floatingpoint.h"
comment = "operator for to_fp from signed bit vector"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_SBV_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_FP_FROM_SBV"
K2       = "FLOATINGPOINT_TO_FP_FROM_SBV_OP"
children = 2
comment  = "convert a signed bit vector to floating-point"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_SBV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToFPSignedBitVectorTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_FP_FROM_UBV_OP"
F       = "class"
T       = "FloatingPointToFPUnsignedBitVector"
hasher  = "::cvc5::internal::FloatingPointConvertSortHashFunction<0x10>"
header  = "util/floatingpoint.h"
comment = "operator for to_fp from unsigned bit vector"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_UBV_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_FP_FROM_UBV"
K2       = "FLOATINGPOINT_TO_FP_FROM_UBV_OP"
children = 2
comment  = "convert an unsigned bit vector to floating-point"

[[typerules]]
name               = "FLOATINGPOINT_TO_FP_FROM_UBV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToFPUnsignedBitVectorTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_UBV_OP"
F       = "class"
T       = "FloatingPointToUBV"
hasher  = "::cvc5::internal::FloatingPointToBVHashFunction<0x1>"
header  = "util/floatingpoint.h"
comment = "operator for to_ubv"

[[typerules]]
name               = "FLOATINGPOINT_TO_UBV_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_UBV"
K2       = "FLOATINGPOINT_TO_UBV_OP"
children = 2
comment  = "convert a floating-point value to an unsigned bit vector"

[[typerules]]
name               = "FLOATINGPOINT_TO_UBV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToUBVTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_UBV_TOTAL_OP"
F       = "class"
T       = "FloatingPointToUBVTotal"
hasher  = "::cvc5::internal::FloatingPointToBVHashFunction<0x4>"
header  = "util/floatingpoint.h"
comment = "operator for to_ubv_total"

[[typerules]]
name               = "FLOATINGPOINT_TO_UBV_TOTAL_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_UBV_TOTAL"
K2       = "FLOATINGPOINT_TO_UBV_TOTAL_OP"
children = 3
comment  = "convert a floating-point value to an unsigned bit vector (defined for all inputs)"

[[typerules]]
name               = "FLOATINGPOINT_TO_UBV_TOTAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToUBVTotalTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_SBV_OP"
F       = "class"
T       = "FloatingPointToSBV"
hasher  = "::cvc5::internal::FloatingPointToBVHashFunction<0x2>"
header  = "util/floatingpoint.h"
comment = "operator for to_sbv"

[[typerules]]
name               = "FLOATINGPOINT_TO_SBV_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_SBV"
K2       = "FLOATINGPOINT_TO_SBV_OP"
children = 2
comment  = "convert a floating-point value to a signed bit vector"

[[typerules]]
name               = "FLOATINGPOINT_TO_SBV"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToSBVTypeRule"

[[constants]]
name    = "FLOATINGPOINT_TO_SBV_TOTAL_OP"
F       = "class"
T       = "FloatingPointToSBVTotal"
hasher  = "::cvc5::internal::FloatingPointToBVHashFunction<0x8>"
header  = "util/floatingpoint.h"
comment = "operator for to_sbv_total"

[[typerules]]
name               = "FLOATINGPOINT_TO_SBV_TOTAL_OP"
type_checker_class = "SimpleTypeRule<RBuiltinOperator>"

[[parameterized]]
K1       = "FLOATINGPOINT_TO_SBV_TOTAL"
K2       = "FLOATINGPOINT_TO_SBV_TOTAL_OP"
children = 3
comment  = "convert a floating-point value to a signed bit vector (defined for all inputs)"

[[typerules]]
name               = "FLOATINGPOINT_TO_SBV_TOTAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToSBVTotalTypeRule"

[[operators]]
name     = "FLOATINGPOINT_TO_REAL"
children = 1
comment  = "floating-point to real"

[[typerules]]
name               = "FLOATINGPOINT_TO_REAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToRealTypeRule"

[[operators]]
name     = "FLOATINGPOINT_TO_REAL_TOTAL"
children = 2
comment  = "floating-point to real (defined for all inputs)"

[[typerules]]
name               = "FLOATINGPOINT_TO_REAL_TOTAL"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointToRealTotalTypeRule"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_NAN"
children = 1
comment  = "NaN component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_NAN"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentBit"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_INF"
children = 1
comment  = "Inf component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_INF"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentBit"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_ZERO"
children = 1
comment  = "Zero component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_ZERO"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentBit"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_SIGN"
children = 1
comment  = "Sign component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_SIGN"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentBit"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_EXPONENT"
children = 1
comment  = "Exponent component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_EXPONENT"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentExponent"

[[operators]]
name     = "FLOATINGPOINT_COMPONENT_SIGNIFICAND"
children = 1
comment  = "Significand component of a word-blasted floating-point number"

[[typerules]]
name               = "FLOATINGPOINT_COMPONENT_SIGNIFICAND"
type_checker_class = "::cvc5::internal::theory::fp::FloatingPointComponentSignificand"

[[operators]]
name     = "ROUNDINGMODE_BITBLAST"
children = 1
comment  = "The bit-vector for a non-deterministic rounding mode"

[[typerules]]
name               = "ROUNDINGMODE_BITBLAST"
type_checker_class = "::cvc5::internal::theory::fp::RoundingModeBitBlast"
