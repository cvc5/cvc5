; EXPECT: sat
(set-option :incremental false)
(set-logic ALL)
(set-option :sets-ext true)
(declare-sort Atom 0)
(declare-fun x () (Set (Tuple Atom Atom)))
(declare-fun y () (Set (Tuple Atom Atom)))
(declare-fun r () (Set (Tuple Atom Atom)))
(declare-fun t () (Set (Tuple Atom)))
(declare-fun a () Atom)
(declare-fun b () Atom)
(declare-fun c () Atom)
(declare-fun d () Atom)
(declare-fun e () Atom)
(assert (member (mkTuple a) (join_image x 2)))
(assert (= t (join_image x 2)))
(assert (= x (union (union (singleton (mkTuple b c)) (singleton (mkTuple d e))) (singleton (mkTuple c e)))))
(assert (member (mkTuple c) t))
(check-sat)
