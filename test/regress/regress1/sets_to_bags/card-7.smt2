(set-logic QF_UFLIAFS)
(set-info :status sat)
(declare-sort E 0)
(declare-fun A1 () (Bag E))
(declare-fun A2 () (Bag E))
(declare-fun A3 () (Bag E))
(declare-fun A4 () (Bag E))
(declare-fun A5 () (Bag E))
(declare-fun A6 () (Bag E))
(declare-fun A7 () (Bag E))
(declare-fun A8 () (Bag E))
(declare-fun A9 () (Bag E))
(declare-fun A10 () (Bag E))
(declare-fun A11 () (Bag E))
(declare-fun A12 () (Bag E))
(declare-fun A13 () (Bag E))
(declare-fun A14 () (Bag E))
(declare-fun A15 () (Bag E))
(declare-fun A16 () (Bag E))
(declare-fun A17 () (Bag E))
(declare-fun A18 () (Bag E))
(declare-fun A19 () (Bag E))
(declare-fun A20 () (Bag E))
(assert (and
  (= (bag.card A1) 1)
  (= (bag.card A2) 1)
  (= (bag.card A3) 1)
  (= (bag.card A4) 1)
  (= (bag.card A5) 1)
  (= (bag.card A6) 1)
  (= (bag.card A7) 1)
  (= (bag.card A8) 1)
  (= (bag.card A9) 1)
  (= (bag.card A10) 1)
  (= (bag.card A11) 1)
  (= (bag.card A12) 1)
  (= (bag.card A13) 1)
  (= (bag.card A14) 1)
  (= (bag.card A15) 1)
  (= (bag.card A16) 1)
  (= (bag.card A17) 1)
  (= (bag.card A18) 1)
  (= (bag.card A19) 1)
  (= (bag.card A20) 1)
))
(assert (= 20 (+ (bag.card A1) (bag.card A2) (bag.card A3) (bag.card A4) (bag.card A5) (bag.card A6) (bag.card A7) (bag.card A8) (bag.card A9) (bag.card A10) (bag.card A11) (bag.card A12) (bag.card A13) (bag.card A14) (bag.card A15) (bag.card A16) (bag.card A17) (bag.card A18) (bag.card A19) (bag.card A20))))
(check-sat)
