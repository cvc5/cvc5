; EXPECT: sat
(set-option :incremental false)
(set-logic ALL)

(declare-fun x () (Set (Tuple Int Int)))
(declare-fun y () (Set (Tuple Int Int)))
(declare-fun e () Int)
(declare-fun a () (Tuple Int Int))
(assert (= a (mkTuple 1 e)))
(declare-fun d () (Tuple Int Int))
(assert (= d (mkTuple e 5)))
(assert (member a x))
(assert (member d x))
(assert (not (member (mkTuple 1 1) x)))
(assert (not (member (mkTuple 1 2) x)))
(assert (not (member (mkTuple 1 3) x)))
(assert (not (member (mkTuple 1 4) x)))
(assert (not (member (mkTuple 1 5) x)))
(assert (not (member (mkTuple 1 6) x)))
(assert (not (member (mkTuple 1 7) x)))
(assert (= y (tclosure x)))
(assert (member (mkTuple 1 5) y))
(check-sat)
