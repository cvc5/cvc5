; COMMAND-LINE: --sygus-inst
; EXPECT: unsat
(set-logic HO_ALL)
(declare-sort $$unsorted 0)
(declare-fun tptp.in ($$unsorted $$unsorted) Bool)
(declare-fun tptp.emptyset () $$unsorted)
(declare-fun tptp.setadjoin ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.setunion ($$unsorted) $$unsorted)
(declare-fun tptp.dsetconstr ($$unsorted (-> $$unsorted Bool)) $$unsorted)
(declare-fun tptp.dsetconstrEL () Bool)
(assert (= tptp.dsetconstrEL (forall ((A $$unsorted) (Xphi (-> $$unsorted Bool)) (Xx $$unsorted)) (let ((_let_1 (@ tptp.in Xx))) (=> (@ _let_1 (@ (@ tptp.dsetconstr A) (lambda ((Xy $$unsorted)) (@ Xphi Xy)))) (@ _let_1 A))))))
(declare-fun tptp.subset ($$unsorted $$unsorted) Bool)
(declare-fun tptp.kpair ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.cartprod ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.singleton ($$unsorted) Bool)
(assert (= tptp.singleton (lambda ((A $$unsorted)) (exists ((Xx $$unsorted)) (and (@ (@ tptp.in Xx) A) (= A (@ (@ tptp.setadjoin Xx) tptp.emptyset)))))))
(declare-fun tptp.ex1 ($$unsorted (-> $$unsorted Bool)) Bool)
(assert (= tptp.ex1 (lambda ((A $$unsorted) (Xphi (-> $$unsorted Bool))) (@ tptp.singleton (@ (@ tptp.dsetconstr A) (lambda ((Xx $$unsorted)) (@ Xphi Xx)))))))
(declare-fun tptp.theprop () Bool)
(assert (= tptp.theprop (forall ((X $$unsorted)) (=> (@ tptp.singleton X) (@ (@ tptp.in (@ tptp.setunion X)) X)))))
(declare-fun tptp.breln ($$unsorted $$unsorted $$unsorted) Bool)
(assert (= tptp.breln (lambda ((A $$unsorted) (B $$unsorted) (C $$unsorted)) (@ (@ tptp.subset C) (@ (@ tptp.cartprod A) B)))))
(declare-fun tptp.func ($$unsorted $$unsorted $$unsorted) Bool)
(assert (= tptp.func (lambda ((A $$unsorted) (B $$unsorted) (R $$unsorted)) (and (@ (@ (@ tptp.breln A) B) R) (forall ((Xx $$unsorted)) (=> (@ (@ tptp.in Xx) A) (@ (@ tptp.ex1 B) (lambda ((Xy $$unsorted)) (@ (@ tptp.in (@ (@ tptp.kpair Xx) Xy)) R)))))))))
(declare-fun tptp.funcImageSingleton () Bool)
(assert (= tptp.funcImageSingleton (forall ((A $$unsorted) (B $$unsorted) (Xf $$unsorted)) (=> (@ (@ (@ tptp.func A) B) Xf) (forall ((Xx $$unsorted)) (=> (@ (@ tptp.in Xx) A) (@ tptp.singleton (@ (@ tptp.dsetconstr B) (lambda ((Xy $$unsorted)) (@ (@ tptp.in (@ (@ tptp.kpair Xx) Xy)) Xf))))))))))
(assert (not (=> tptp.dsetconstrEL (=> tptp.theprop (=> tptp.funcImageSingleton (forall ((A $$unsorted) (B $$unsorted) (Xf $$unsorted)) (=> (@ (@ (@ tptp.func A) B) Xf) (forall ((Xx $$unsorted)) (=> (@ (@ tptp.in Xx) A) (@ (@ tptp.in (@ tptp.setunion (@ (@ tptp.dsetconstr B) (lambda ((Xy $$unsorted)) (@ (@ tptp.in (@ (@ tptp.kpair Xx) Xy)) Xf))))) B))))))))))
(set-info :filename SEU673^2)
(check-sat-assuming ( true ))
