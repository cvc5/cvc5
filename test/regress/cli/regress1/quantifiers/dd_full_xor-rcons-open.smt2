; EXPECT: unsat
(set-logic UFNIA)
(declare-fun p (Int) Int)
(declare-fun k () Int)
(assert (> k 0))
(assert (and (= 1 (p 0)) (forall ((i Int)) (or (= i 0) (= (p i) (* 2 (p (- i 1))))))))
(declare-fun C () Int)
(assert (and (>= C 0) (<= C (- (p k) 1))))
(declare-fun j () Int)
(assert (<= j (- (p k) 1)))
(declare-fun C2 () Int)
(assert (and (>= C2 0)))
(assert (and (< (- (* 2 (mod C (p (- k 1)))) C) (- (* 2 (mod C2 (p (- k 1)))) C2)) (distinct (< (- (* 2 (mod j (p (- k 1)))) j) (- (* 2 (mod C (p (- k 1)))) C)) (and (distinct j C2) (< (- (* 2 (mod j (p (- k 1)))) j) (- (* 2 (mod C (p (- k 1)))) C))))))
(check-sat)
