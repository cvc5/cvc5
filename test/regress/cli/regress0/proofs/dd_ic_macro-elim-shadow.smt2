; EXPECT: unsat
(set-logic ALL)
(define-fun in_range ((k Int) (x Int)) Bool (and (>= x 0)))
(define-fun intmodtotal ((k Int) (a Int) (b Int)) Int (ite (= b 0) a (mod a b)))
(define-fun l ((k Int) (x Int) (s Int) (t Int)) Bool (<= (intmodtotal k s x) t))
(define-fun SC ((k Int) (s Int) (t Int)) Bool true)
(declare-fun k () Int)
(declare-fun s () Int)
(declare-fun t () Int)
(define-fun inv ((k Int) (s Int) (t Int)) Int s)
(define-fun l_part ((k Int) (s Int) (t Int)) Bool (l k (inv k s t) s t))
(define-fun left_to_right ((k Int) (s Int) (t Int)) Bool (=> (SC k s t) (l_part k s t)))
(define-fun assertion_ltr () Bool (not (left_to_right k s t)))
(assert (in_range k t))
(assert assertion_ltr)
(check-sat)
