; EXPECT: unsat
(set-option :incremental false)
(set-logic ALL)
(declare-sort Atom 0)

(declare-fun x () (Relation Int Int))
(declare-fun id () (Relation Int Int))
(declare-fun t () (Relation Int))
(declare-fun z () (Tuple Int Int))
(assert (= z (tuple 1 2)))
(declare-fun zt () (Tuple Int Int))
(assert (= zt (tuple 2 1)))
(declare-fun v () (Tuple Int Int))
(assert (= v (tuple 1 1)))
(declare-fun a () (Tuple Int Int))
(assert (= a (tuple 1 5)))
(assert (set.member (tuple 1) t))
(assert (set.member (tuple 2) t))
(assert (set.member z x))
(assert (set.member zt x))
(assert (set.member v x))
(assert (set.member a x))
(assert (= id (rel.iden t)))
(assert (not (set.member (tuple 1 1) (set.inter id x))))
(check-sat)
