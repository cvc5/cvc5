; EXPECT: unsat
; DISABLE-TESTER: alethe
(set-logic ALL)
(declare-const x Bool)
(declare-sort S 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-fun f (S2 Int) Int)
(declare-fun f (S3 Int) S2)
(declare-fun f (Int Int Int) S)
(declare-fun f7 () S3)
(declare-fun f (S4 S5) Int)
(declare-fun f10 (S6 Int) S4)
(declare-fun f1 () S6)
(declare-fun f12 (S7 Int) S5)
(declare-fun f13 () S7)
(declare-fun f14 () S4)
(declare-fun f15 () S3)
(assert (distinct (f (f (f f7 (- 1)) (+ 1 (* 4 (f f14 (f12 f13 0))))) (f (f10 f1 (- 1)) (f12 f13 (* 2 (f f14 (f12 f13 0))))) (+ 1 (* 4 (f f14 (f12 f13 0))))) (f (f (f f7 (- 1)) (+ 1 (* 4 (f f14 (f12 f13 0))))) (f (f10 f1 (- 1)) (f12 f13 (f (f f15 (* 4 (f f14 (f12 f13 0)))) 2))) (+ 1 (* 4 (f f14 (f12 f13 0)))))))
(assert x)
(assert (forall ((? Int) (v Int)) (= (f (f f15 ?) v) (ite x (div ? v) (div (f f14 (f12 f13 0)) (- 1))))))
(check-sat)
