(set-option :incremental false)
(set-info :status unsat)
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun member_6_curr_2 () (_ BitVec 32))
(declare-fun arr_next_15 () (Array (_ BitVec 32) (_ BitVec 32)))
(declare-fun member_3_curr_4 () (_ BitVec 32))
(declare-fun main_0_x_3 () (_ BitVec 32))
(declare-fun member_3_curr_5 () (_ BitVec 32))
(declare-fun arr_val_8 () (Array (_ BitVec 32) (_ BitVec 32)))
(check-sat-assuming ( (let ((_let_0 (select arr_next_15 (_ bv0 32)))) (and (= (_ bv0 32) (ite (= (_ bv1 32) (select arr_val_8 member_6_curr_2)) (_ bv1 32) (_ bv0 32))) (= (_ bv0 32) (select arr_next_15 member_3_curr_5)) (= (select arr_next_15 (_ bv1 32)) member_3_curr_4) (= (_ bv1 32) _let_0) (= member_3_curr_5 (ite (and (= (_ bv0 32) main_0_x_3) (= (_ bv1 32) member_3_curr_4)) (_ bv0 32) member_3_curr_4)) (= member_6_curr_2 _let_0) true (= (_ bv0 32) (select arr_next_15 member_6_curr_2)))) ))
