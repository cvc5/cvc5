(include "../programs/Nary.eo")

; note: >
;  This is the generic tester predicate whose first argument is expected to be
;  a constructor symbol for datatype D. We do not currently check this is the
;  case.
(declare-parameterized-const is ((C Type :implicit) (D Type :implicit)) (-> C D Bool))

; note: >
;  This is the generic updater whose first argument is expected to be
;  a selector symbol for datatype D. We do not currently check this is the
;  case.
(declare-parameterized-const update ((D Type :implicit) (T Type :implicit) (S Type :implicit)) (-> S D T D))

; disclaimer: >
;   This sort is not in the SMT-LIB standard. All further function
;   symbols over this sort are also not part of the SMT-LIB standard.
(declare-const UnitTuple Type)
; disclaimer: >
;   This sort is not in the SMT-LIB standard. All further function
;   symbols over this sort are also not part of the SMT-LIB standard.
(declare-const Tuple (-> Type Type Type) :right-assoc-nil UnitTuple)

(declare-const tuple.unit UnitTuple)
(declare-parameterized-const tuple ((T Type :implicit) (U Type :implicit)) (-> T U (eo::cons Tuple T U)) :right-assoc-nil tuple.unit)
(declare-parameterized-const tuple.select ((T Type :implicit) (i Int)) (-> T (eo::list_nth Tuple T i)))

; disclaimer: This function is not in the SMT-LIB standard.
(declare-parameterized-const tuple.update ((T Type :implicit) (U Type :implicit) (i Int))
  (-> T U (eo::requires U (eo::list_nth Tuple T i) T)))
