(include "../programs/Utils.eo")

; disclaimer: >
;   This function is a builtin function symbol of SMT-LIB denoting
;   universal quantification. We represent it as an ordinary function taking a
;   list as the first child to model cvc5's treatment of quantified formulas.
(declare-const forall (-> @List Bool Bool) :binder @list)

; disclaimer: >
;   This function is a builtin function symbol of SMT-LIB denoting
;   existential quantification. We represent it as an ordinary function taking a
;   list as the first child to model cvc5's treatment of quantified formulas.
(declare-const exists (-> @List Bool Bool) :binder @list)

; program: $get_qskolem_type
; args:
; - F Bool: The quantified formula.
; - i Int: The integer indicating the index of the variable.
; return: >
;   The type of the @quantifiers_skolemize term for F and i.
(program $get_qskolem_type ((xs @List) (G Bool) (i Int))
  (Bool Int) Type
  (
    (($get_qskolem_type (forall xs G) i) (eo::typeof (eo::list_nth @list xs i)))
  )
)

; skolems
(declare-const @quantifiers_skolemize (-> (! Type :var T :implicit) (! Bool :opaque :var F) (! Int :opaque :var i) ($get_qskolem_type F i)))
