(include "../theories/Builtin.smt3")
(include "../theories/Quantifiers.smt3")

; @program $substitute
; @param arg1 : S. The domain of the substitution.
; @param arg2 : S. The range of the substitution.
; @param arg3 : U. The term to process.
; @return ret : U. The result of replacing all occurrences of arg1 with arg2
; in arg3.
(program $substitute
  ((T Type) (U Type) (S Type) (x S) (y S) (f (-> T U)) (a T) (z U) (w T))
  (S S U) U
  (
  (($substitute x y x)             y)
  (($substitute x y (f a))         (_ ($substitute x y f) ($substitute x y a)))
  (($substitute x y z)             z)
  )
)

; @program $substitute_list
; @param arg1 : @List. The list of domains of the substitution.
; @param arg2 : @List. The list of ranges of the substitution.
; @param arg3 : U. The term to process.
; @return ret : U. The result of applying the substitutions specified by arg1
; and arg2 in order to arg3. In particular, the first element in the lists arg1
; and arg2 are processed first.
(program $substitute_list ((T Type) (U Type) (F U) (x T) (xs @List :list) (t T) (ts @List :list))
  (@List @List U) U
  (
    (($substitute_list (@list x xs) (@list t ts) F) ($substitute_list xs ts ($substitute x t F)))
    (($substitute_list @list.nil @list.nil F)       F)
  )
)
