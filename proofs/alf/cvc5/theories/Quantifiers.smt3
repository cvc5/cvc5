(include "../programs/Utils.smt3")

(declare-const forall (-> @List Bool Bool) :binder @list)

(declare-const exists (-> @List Bool Bool) :binder @list)

; returns the type of the element in the list, if the list is a singleton.
(program get_witness_type ((x @List))
  (@List) Type
  (
    ((get_witness_type (@list x)) (alf.typeof x))
  )
)
(declare-const witness (-> (! @List :var L) Bool (get_witness_type L)) :binder @list)

; skolems
(declare-const @k.QUANTIFIERS_SKOLEMIZE (-> (! Type :var T :implicit) Bool T T))
