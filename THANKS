Thanks to:

- Chad Brewbaker for fixing a memory leak in 2017.

- Adam Buchbinder of Google for submitting patches in November 2013 to fix a
  number of issues with CVC3 (which were also applicable to CVC4's compatibility
  interface).

- David Cok of GrammaTech, Inc., for suggesting numerous improvements in CVC4's
  SMT-LIBv2 compliance in 2013 and 2014.

- Peter Collingbourne (formerly of the Multicore Programming Group at Imperial
  College London, headed by Alastair Donaldson) for developing and submitting a
  number of patches in September 2012 related to SMT-LIBv2 compliance.

- Simon Dierl for fixing the ENABLE_BEST option in the build system in 2019.

- Florian Frohn for fixing the compilation of cvc5 with musl-libc in 2023.

- Finn Haedicke of University of Bremen, Germany for fixing namespace specifiers
  in CVC4's version of minisat in 2015.

- Pat Hawks for writing tests for CVC4's Java API.

- Thomas Hunger for some important patches to CVC4's SWIG interfaces in March
  2014.

- Jerry James for multiple bugfixes in 2023.

- Andrew V. Jones (now Teylu) for several fixes, refactoring the GLPK-based
  approximating Simplex solver, and working towards a native Windows build
  since 2019.

- Mark Laws for fixes in the test suite for Windows in 2017.

- Ken Matsui for fixing compiler warnings in 2019.

- Cristian Mattarei of Stanford University for fixing an issue with parsing
  floating point numbers in 2017.

- José Neto for improvements to build system and web version of cvc5 in
  2023 and 2024.

- Tobias Nießen for a correction to the API documentation in 2023.

- Jordy Ruiz of University of Toulouse for fixing throw specifiers on the theory
  output channels in 2015.

- Áron Ricardo Perez-Lopez for solving an issue with static compilation in 2023.

- Clement Pit-Claudel of MIT for improving the signal handling support for
  Windows builds in 2017.

- Sorawee Porncharoenwase for fixing an issue related to compiling cvc5 with
  CoCoA on M1/M2 CPUs.

- sarkoxed for extending the finite fields API to allow custom bases for string
  representations in 2023.

- Florian Schanda for improving the readability of output of get-model in 2018.

- Tom Smeding for a fix in the contrib/get-antlr-3.4 script in 2018.

- Scott Talbert for improvements to the build systems and correcting spelling
  errors in the documentation in 2023 and 2024.

- Piotr Troja for several fixes in 2019.

- Arjun Viswanathan for improvements in the CVC and the SMT2 parser.

- Anjiang-Wei for fixing a typo in the Python API documentation in 2023.

- Fabian Wolff in 2016 for fixing several spelling mistakes.

- Justin Xu for contributing to refactoring CVC4's preprocessing infrastructure.

- Vinicius Braga Freire for a modification in the proof printer for dot format,
  allowing the clusterization of the proof into logic groups. Furthermore,for
  implementing a built-in Web Assembly compilation method in 2022.
