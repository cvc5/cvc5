on: [push, pull_request]
name: CI

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: ubuntu:production
            os: ubuntu-latest
            config: production --auto-download --all-bindings --editline --docs
            cache-key: production
            python-bindings: true
            build-documentation: true
            check-examples: true
            exclude_regress: 3-4
            run_regression_args: --no-check-unsat-cores --no-check-proofs

          - name: macos:production
            os: macos-11
            config: production --auto-download --all-bindings --editline
            cache-key: production
            python-bindings: true
            check-examples: true
            exclude_regress: 3-4
            run_regression_args: --no-check-unsat-cores --no-check-proofs

          - name: ubuntu:production-clang
            os: ubuntu-18.04
            env: CC=clang CXX=clang++
            config: production --auto-download
            cache-key: productionclang
            check-examples: true
            exclude_regress: 3-4
            run_regression_args: --no-check-unsat-cores --no-check-proofs

          - name: ubuntu:production-dbg
            os: ubuntu-18.04
            config: production --auto-download --assertions --tracing --unit-testing --editline
            cache-key: dbg
            check-units: true
            exclude_regress: 3-4
            run_regression_args: --no-check-unsat-cores

          - name: ubuntu:production-dbg-clang
            os: ubuntu-latest
            env: CC=clang CXX=clang++
            config: production --auto-download --assertions --tracing --cln --gpl
            cache-key: dbgclang
            exclude_regress: 3-4
            run_regression_args: --no-check-proofs

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        with-documentation: ${{ matrix.build-documentation }}
        with-python-bindings: ${{ matrix.python-bindings }}

    - name: Setup caches
      uses: ./.github/actions/setup-cache
      with:
        cache-key: ${{ matrix.cache-key }}

    - name: Configure
      run: |
        ${{ matrix.env }} ./configure.sh ${{ matrix.config }} \
          --prefix=$(pwd)/build/install \
          --werror

    - name: Build
      run: make -j${{ env.num_proc }}
      working-directory: build

    - name: ccache Statistics
      run: ccache -s

    - name: Run CTest
      run: make -j${{ env.num_proc }} check
      env:
        ARGS: --output-on-failure -LE regress[${{ matrix.exclude_regress }}]
        CVC5_REGRESSION_ARGS: --no-early-exit
        RUN_REGRESSION_ARGS: ${{ matrix.run_regression_args }}
      working-directory: build

    - name: Run Unit Tests
      if: matrix.check-units
      run: make -j${{ env.num_proc }} apitests units
      working-directory: build

    - name: Install Check
      run: |
        make -j${{ env.num_proc }} install
        echo -e "#include <cvc5/cvc5.h>\nint main() { cvc5::api::Solver s; return 0; }" > /tmp/test.cpp
        g++ -std=c++17 /tmp/test.cpp -I install/include -L install/lib -lcvc5
      working-directory: build

    - name: Python Install Check
      if: matrix.python-bindings
      run: |
       export PYTHONPATH="$PYTHONPATH:$(dirname $(find build/install/ -name "pycvc5" -type d))"
       python3 -c "import pycvc5"

      # Examples are built for non-symfpu builds
    - name: Check Examples
      if: matrix.check-examples && runner.os == 'Linux'
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_PREFIX_PATH=$(pwd)/../../build/install/lib/cmake
        make -j${{ env.num_proc }}
        ctest -j${{ env.num_proc }} --output-on-failure
      working-directory: examples

    - name: Build Documentation
      if: matrix.build-documentation
      run: |
        make -j${{ env.num_proc }} docs-gh
        if [ "${{ github.event_name }}" == "pull_request" ] ; then
          echo "${{ github.event.number }}" > docs/sphinx-gh/prnum
        fi
      working-directory: build
    
    - name: Store Documentation
      if: matrix.build-documentation
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: build/docs/sphinx-gh/
