name: Configure and build
description: Run configure script and build
inputs:
  configure-env:
    default: ""
  configure-config:
    default: ""
  macos-target:
    default: ""
  build-shared:
    default: true
    type: boolean
  build-static:
    default: true
    type: boolean
  strip-bin:
    default: ""
  shell:
    default: bash
outputs:
  shared-build-dir:
    description: build directory of the shared build
    value: ${{ steps.shared-build.outputs.build-dir }}
  static-build-dir:
    description: build directory of the static build
    value: ${{ steps.static-build.outputs.build-dir }}
runs:
  using: composite
  steps:
    - name: Set MACOSX_DEPLOYMENT_TARGET
      if: runner.os == 'macOS' && inputs.macos-target
      shell: ${{ inputs.shell }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=${{ inputs.macos-target }}" >> $GITHUB_ENV

    - name: Shared build
      id: shared-build
      # Boolean inputs are actually strings:
      # https://github.com/actions/runner/issues/1483
      if: inputs.build-shared == '' || inputs.build-shared == 'true'
      shell: ${{ inputs.shell }}
      run: |
        echo "::group::Shared build"
        ${{ inputs.configure-env }} ./configure.sh ${{ inputs.configure-config }} \
          --prefix=$(pwd)/build-shared/install --werror --name=build-shared \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        
        cd build-shared/ && pwd=$(pwd)
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          ccache --set-config="base_dir=$pwd"
        else
          # can not use `ccache --set-config=base_dir=` due to ccache bug, fixed with 3.7.10
          $SED -i.orig -n -e '/^base_dir = /!p' -e "\$abase_dir = $pwd" $CCACHE_CONFIGPATH
        fi
        
        make -j${{ env.num_proc }}

        echo "build-dir=$pwd" >> $GITHUB_OUTPUT 
        echo "::endgroup::"

    - name: Static build
      id: static-build
      # Boolean inputs are actually strings:
      # https://github.com/actions/runner/issues/1483
      if: inputs.build-static == '' || inputs.build-static == 'true'
      shell: ${{ inputs.shell }}
      run: |
        echo "::group::Static build"
        ${{ inputs.configure-env }} ./configure.sh ${{ inputs.configure-config }} \
          --prefix=$(pwd)/build-static/install --werror --static --name=build-static --no-java-bindings \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache

        cd build-static/ && pwd=$(pwd)
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          ccache --set-config="base_dir=$pwd"
        else
          # can not use `ccache --set-config=base_dir=` due to ccache bug, fixed with 3.7.10
          $SED -i.orig -n -e '/^base_dir = /!p' -e "\$abase_dir = $pwd" $CCACHE_CONFIGPATH
        fi

        make -j${{ env.num_proc }}

        if [[ "${{ inputs.strip-bin }}" != "" ]]; then
          ${{ inputs.strip-bin }} bin/cvc5*
        fi

        echo "build-dir=$pwd" >> $GITHUB_OUTPUT
        echo "::endgroup::"
        
    - name: Reset ccache base_dir
      shell: ${{ inputs.shell }}
      run: |
        echo "::group::Reset ccache base_dir"
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          ccache --set-config="base_dir="
        else
          $SED -i.orig -n -e '/^base_dir = /!p' -e "\$abase_dir =" $CCACHE_CONFIGPATH
        fi
        echo "::endgroup::"

    - name: ccache Statistics
      shell: ${{ inputs.shell }}
      run: ccache -s
