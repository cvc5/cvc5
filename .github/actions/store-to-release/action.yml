name: Store to release
description: Store an asset on the release page associated to current release
inputs:
  asset-filename:
    description: filename of the asset
  github-token:
    description: token to upload asset to current release
  
runs:
  using: composite
  steps:
    - name: Store to release
      shell: 'python3 {0}'
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PACKAGE: ${{ inputs.asset-filename }}
      run: |
        import os
        from github import Github

        refname = os.getenv('GITHUB_REF_NAME')
        gh = Github(os.getenv('GITHUB_TOKEN'))
        repo = gh.get_repo(os.getenv('GITHUB_REPOSITORY'))
        try:
          rel = repo.get_release(refname)
        except:
          print("New release from " + refname)
          ref = repo.get_git_ref('tags/' + refname)
          commit = repo.get_git_commit(ref.object.sha)
          rel = repo.create_git_release(refname, refname, commit.message)
        rel.upload_asset(os.getenv('PACKAGE'))
